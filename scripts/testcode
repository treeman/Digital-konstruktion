
; Direct
M1 -> ADR1, PC++
AR1 -> ADR1

M2 -> ADR2
AR2 -> ADR2

M1 -> ALU1
M2 -> ALU1

M1 -> ALU2
M2 -> ALU2

PC -> mem_addr
AR1 -> mem_addr
AR2 -> mem_addr
ADR1 -> mem_addr
ADR2 -> mem_addr

; Through buss
PC -> ALU1
PC -> M1
PC -> M2
M1 -> mem_addr
OP -> IR
IN -> OP
IN -> M1
IN -> M2

; Explicit buss
PC -> buss, buss -> ALU1
M1 -> buss, buss -> PC, buss -> M2, buss -> ALU1


; Doesn't exist
PC -> ALU2
IR -> OP

; Used buss
M1 -> buss, M2 -> buss, buss -> PC
PC -> M1, OP -> ALU1

; Memory stuff
OP -> mem(PC)
M1 -> mem(buss)
M2 -> mem(AR1)
OP -> mem(AR2)
M1 -> mem(ADR1)
M2 -> mem(ADR2)

mem(PC) -> OP
mem(buss) -> M1
mem(AR1) -> M2
mem(AR2) -> OP
mem(ADR1) -> M1
mem(ADR2) -> M2

mem(PC) -> OP, mem(PC) -> M1, mem(PC) -> M2
OP -> mem(PC), M1 -> mem(PC), M2 -> mem(PC)
PC -> mem_addr, M1 -> mem, mem -> M2

; Advanced commands
ALU--
ALU++
ALU2 += M2
ALU1 -= PC

ALU1 += M1, ALU1 += M2

uCount = 0
uPC = 0
uCount -> Z

uPC++
op_addr -> uPC
A_addr -> uPC
B_addr -> uPC
jmp
jmpZ

M1 -> buss, buss -> M2

; Errors
M1 -> mem(PC), M1 -> mem(ADR1)
mem -> OP
ALU1 -> mem

IR -> OP
PC -> ALU2
M1 -> buss, M2 -> buss, buss -> PC
PC -> IR, M1 -> M2
ALU1 += PC, ALU--
ALU++, PC -> ALU1

